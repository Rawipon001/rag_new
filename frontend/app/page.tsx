'use client';

import { useState } from 'react';
import { Calculator, TrendingUp, Shield, Wallet, Gift, PiggyBank, Info } from 'lucide-react';
import {
  SimplifiedFormData,
  TaxOptimizationResponse,
  convertToApiRequest
} from '@/lib/types';
import { PieChart, Pie, Cell, ResponsiveContainer, Legend, Tooltip, BarChart, Bar, XAxis, YAxis, CartesianGrid } from 'recharts';

export default function Home() {
  const [formData, setFormData] = useState<SimplifiedFormData>({
    // ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ
    salary: 0,
    bonus: 0,
    
    // ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß
    hasSpouse: false,
    numberOfChildren: 0,
    
    // ‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏™‡∏±‡∏á‡∏Ñ‡∏°
    hasSocialSecurity: false,
    socialSecurityAmount: 0,
    
    // ‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô
    hasLifeInsurance: false,
    lifeInsuranceAmount: 0,
    hasHealthInsurance: false,
    healthInsuranceAmount: 0,
    hasPensionInsurance: false,
    pensionInsuranceAmount: 0,
    
    // Easy e-Receipt
    easyEReceiptAmount: 0,
    
    // ‡πÄ‡∏á‡∏¥‡∏ô‡∏ö‡∏£‡∏¥‡∏à‡∏≤‡∏Ñ
    donationAmount: 0,
    
    // ‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô
    hasProvidentFund: false,
    providentFundAmount: 0,
    hasRMF: false,
    rmfAmount: 0,
    hasSSF: false,
    ssfAmount: 0,
    
    risk_tolerance: 'medium'
  });

  const [result, setResult] = useState<TaxOptimizationResponse | null>(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    setError(null);
  
    // ‡πÅ‡∏õ‡∏•‡∏á SimplifiedFormData ‡πÄ‡∏õ‡πá‡∏ô TaxCalculationRequest
    const apiRequest = convertToApiRequest(formData);
    console.log("üì§ Sending request:", apiRequest);
  
    try {
      const response = await fetch('http://localhost:8000/api/calculate', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(apiRequest)
      });

      if (!response.ok) {
        throw new Error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì');
      }

      const data: TaxOptimizationResponse = await response.json();
      setResult(data);
    } catch (err) {
      console.error("‚ùå Error:", err);
      setError(err instanceof Error ? err.message : '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î');
    } finally {
      setLoading(false);
    }
  };

  const formatCurrency = (amount: number) => {
    return new Intl.NumberFormat('th-TH', {
      style: 'currency',
      currency: 'THB',
      minimumFractionDigits: 0,
      maximumFractionDigits: 0
    }).format(amount);
  };

  const chartData = result ? [
    { name: '‡∏†‡∏≤‡∏©‡∏µ‡∏ó‡∏µ‡πà‡∏à‡πà‡∏≤‡∏¢', value: result.current_tax.tax_amount, color: '#ef4444' },
    { name: '‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏™‡∏∏‡∏ó‡∏ò‡∏¥', value: result.current_tax.net_income, color: '#22c55e' }
  ] : [];

  const returnChartData = result?.recommendations.map(rec => ({
    name: rec.strategy.substring(0, 20) + '...',
    '1 ‡∏õ‡∏µ': rec.expected_return_1y || 0,
    '3 ‡∏õ‡∏µ': rec.expected_return_3y || 0,
    '5 ‡∏õ‡∏µ': rec.expected_return_5y || 0,
  })) || [];

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
      {/* Header */}
      <header className="bg-white shadow-sm">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
          <div className="flex items-center gap-3">
            <Calculator className="w-8 h-8 text-blue-600" />
            <div>
              <h1 className="text-3xl font-bold text-gray-900">AI Tax Advisor</h1>
              <p className="text-sm text-gray-600">‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏†‡∏≤‡∏©‡∏µ‡∏≠‡∏±‡∏à‡∏â‡∏£‡∏¥‡∏¢‡∏∞ - ‡∏õ‡∏µ 2568</p>
            </div>
          </div>
        </div>
      </header>

      <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          {/* Form Section */}
          <div className="bg-white rounded-xl shadow-lg p-6">
            <h2 className="text-2xl font-bold text-gray-900 mb-6">‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤‡∏•‡∏î‡∏´‡∏¢‡πà‡∏≠‡∏ô</h2>
            
            <form onSubmit={handleSubmit} className="space-y-8">
              {/* 1. ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ */}
              <div className="space-y-4 p-4 bg-orange-50 rounded-lg border-2 border-orange-200">
                <h3 className="text-lg font-bold text-orange-800 flex items-center gap-2">
                  <TrendingUp className="w-5 h-5" />
                  ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ
                </h3>
                
                <div className="space-y-2">
                  <label className="block text-sm font-medium text-gray-700">
                    ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏£‡∏≤‡∏¢‡∏õ‡∏µ (‡∏ö‡∏≤‡∏ó)
                  </label>
                  <input
                    type="number"
                    value={formData.salary || ''}
                    onChange={(e) => setFormData({...formData, salary: parseFloat(e.target.value) || 0})}
                    placeholder="‡πÄ‡∏ä‡πà‡∏ô 600,000"
                    className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500"
                  />
                </div>

                <div className="space-y-2">
                  <label className="block text-sm font-medium text-gray-700">
                    ‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏£‡∏≤‡∏¢‡∏õ‡∏µ (‡∏ö‡∏≤‡∏ó)
                  </label>
                  <input
                    type="number"
                    value={formData.bonus || ''}
                    onChange={(e) => setFormData({...formData, bonus: parseFloat(e.target.value) || 0})}
                    placeholder="‡πÄ‡∏ä‡πà‡∏ô 100,000"
                    className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500"
                  />
                </div>
              </div>

              {/* 2. ‡∏Ñ‡πà‡∏≤‡∏•‡∏î‡∏´‡∏¢‡πà‡∏≠‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß/‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß */}
              <div className="space-y-4 p-4 bg-blue-50 rounded-lg border-2 border-blue-200">
                <h3 className="text-lg font-bold text-blue-800 flex items-center gap-2">
                  <Shield className="w-5 h-5" />
                  ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏•‡∏î‡∏´‡∏¢‡πà‡∏≠‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß/‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß
                </h3>

                {/* ‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß - ‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ */}
                <div className="bg-blue-100 p-3 rounded-lg">
                  <div className="flex justify-between items-center">
                    <span className="text-sm font-medium text-blue-900">‡∏Ñ‡πà‡∏≤‡∏•‡∏î‡∏´‡∏¢‡πà‡∏≠‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß</span>
                    <span className="text-lg font-bold text-blue-900">60,000 ‡∏ö‡∏≤‡∏ó</span>
                  </div>
                  <p className="text-xs text-blue-700 mt-1">‚úì ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÉ‡∏´‡πâ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥</p>
                </div>

                {/* ‡∏Ñ‡∏π‡πà‡∏™‡∏°‡∏£‡∏™ */}
                <div className="space-y-2">
                  <label className="flex items-center gap-2 cursor-pointer">
                    <input
                      type="checkbox"
                      checked={formData.hasSpouse}
                      onChange={(e) => setFormData({...formData, hasSpouse: e.target.checked})}
                      className="w-5 h-5 text-blue-600 rounded focus:ring-2 focus:ring-blue-500"
                    />
                    <span className="text-sm font-medium text-gray-700">
                      ‡∏°‡∏µ‡∏Ñ‡∏π‡πà‡∏™‡∏°‡∏£‡∏™ (‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ)
                      {formData.hasSpouse && <span className="ml-2 text-blue-600 font-bold">+60,000 ‡∏ö‡∏≤‡∏ó</span>}
                    </span>
                  </label>
                </div>

                {/* ‡∏ö‡∏∏‡∏ï‡∏£ */}
                <div className="space-y-2">
                  <label className="block text-sm font-medium text-gray-700">
                    ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ö‡∏∏‡∏ï‡∏£ (‡∏Ñ‡∏ô)
                  </label>
                  <input
                    type="number"
                    min="0"
                    max="10"
                    value={formData.numberOfChildren}
                    onChange={(e) => setFormData({...formData, numberOfChildren: parseInt(e.target.value) || 0})}
                    className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500"
                  />
                  {formData.numberOfChildren > 0 && (
                    <p className="text-sm text-blue-600">
                      ‡∏•‡∏î‡∏´‡∏¢‡πà‡∏≠‡∏ô: <span className="font-bold">{formatCurrency(formData.numberOfChildren * 30000)}</span>
                    </p>
                  )}
                </div>

                {/* ‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏™‡∏±‡∏á‡∏Ñ‡∏° */}
                <div className="space-y-2">
                  <label className="flex items-center gap-2 cursor-pointer">
                    <input
                      type="checkbox"
                      checked={formData.hasSocialSecurity}
                      onChange={(e) => setFormData({...formData, hasSocialSecurity: e.target.checked})}
                      className="w-5 h-5 text-blue-600 rounded focus:ring-2 focus:ring-blue-500"
                    />
                    <span className="text-sm font-medium text-gray-700">‡∏à‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏™‡∏±‡∏á‡∏Ñ‡∏°</span>
                  </label>
                  {formData.hasSocialSecurity && (
                    <input
                      type="number"
                      value={formData.socialSecurityAmount || ''}
                      onChange={(e) => setFormData({...formData, socialSecurityAmount: parseFloat(e.target.value) || 0})}
                      placeholder="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô (‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 9,000)"
                      max="9000"
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500"
                    />
                  )}
                </div>
              </div>

              {/* 3. ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÅ‡∏•‡∏∞‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û */}
              <div className="space-y-4 p-4 bg-green-50 rounded-lg border-2 border-green-200">
                <h3 className="text-lg font-bold text-green-800 flex items-center gap-2">
                  <Shield className="w-5 h-5" />
                  ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô
                </h3>

                {/* ‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï */}
                <div className="space-y-2">
                  <label className="flex items-center gap-2 cursor-pointer">
                    <input
                      type="checkbox"
                      checked={formData.hasLifeInsurance}
                      onChange={(e) => setFormData({...formData, hasLifeInsurance: e.target.checked})}
                      className="w-5 h-5 text-green-600 rounded"
                    />
                    <span className="text-sm font-medium text-gray-700">‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï</span>
                  </label>
                  {formData.hasLifeInsurance && (
                    <div>
                      <input
                        type="number"
                        value={formData.lifeInsuranceAmount || ''}
                        onChange={(e) => setFormData({...formData, lifeInsuranceAmount: parseFloat(e.target.value) || 0})}
                        placeholder="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô (‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 100,000)"
                        max="100000"
                        className="w-full px-4 py-2 border border-gray-300 rounded-lg"
                      />
                      <p className="text-xs text-green-600 mt-1">‡∏•‡∏î‡∏´‡∏¢‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 100,000 ‡∏ö‡∏≤‡∏ó</p>
                    </div>
                  )}
                </div>

                {/* ‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û */}
                <div className="space-y-2">
                  <label className="flex items-center gap-2 cursor-pointer">
                    <input
                      type="checkbox"
                      checked={formData.hasHealthInsurance}
                      onChange={(e) => setFormData({...formData, hasHealthInsurance: e.target.checked})}
                      className="w-5 h-5 text-green-600 rounded"
                    />
                    <span className="text-sm font-medium text-gray-700">‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û</span>
                  </label>
                  {formData.hasHealthInsurance && (
                    <div>
                      <input
                        type="number"
                        value={formData.healthInsuranceAmount || ''}
                        onChange={(e) => setFormData({...formData, healthInsuranceAmount: parseFloat(e.target.value) || 0})}
                        placeholder="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô (‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 25,000)"
                        max="25000"
                        className="w-full px-4 py-2 border border-gray-300 rounded-lg"
                      />
                      <p className="text-xs text-green-600 mt-1">‡∏•‡∏î‡∏´‡∏¢‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 25,000 ‡∏ö‡∏≤‡∏ó</p>
                    </div>
                  )}
                </div>

                {/* ‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ö‡∏≥‡∏ô‡∏≤‡∏ç */}
                <div className="space-y-2">
                  <label className="flex items-center gap-2 cursor-pointer">
                    <input
                      type="checkbox"
                      checked={formData.hasPensionInsurance}
                      onChange={(e) => setFormData({...formData, hasPensionInsurance: e.target.checked})}
                      className="w-5 h-5 text-green-600 rounded"
                    />
                    <span className="text-sm font-medium text-gray-700">‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ö‡∏≥‡∏ô‡∏≤‡∏ç</span>
                  </label>
                  {formData.hasPensionInsurance && (
                    <div>
                      <input
                        type="number"
                        value={formData.pensionInsuranceAmount || ''}
                        onChange={(e) => setFormData({...formData, pensionInsuranceAmount: parseFloat(e.target.value) || 0})}
                        placeholder="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô (‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 15% ‡∏´‡∏£‡∏∑‡∏≠ 200,000)"
                        className="w-full px-4 py-2 border border-gray-300 rounded-lg"
                      />
                      <p className="text-xs text-green-600 mt-1">‡∏•‡∏î‡∏´‡∏¢‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 15% ‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ ‡∏´‡∏£‡∏∑‡∏≠ 200,000 ‡∏ö‡∏≤‡∏ó</p>
                    </div>
                  )}
                </div>
              </div>

              {/* 4. ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏¢‡∏≤‡∏ß */}
              <div className="space-y-4 p-4 bg-purple-50 rounded-lg border-2 border-purple-200">
                <h3 className="text-lg font-bold text-purple-800 flex items-center gap-2">
                  <PiggyBank className="w-5 h-5" />
                  ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô
                </h3>

                {/* ‡∏Å‡∏≠‡∏á‡∏ó‡∏∏‡∏ô‡∏™‡∏≥‡∏£‡∏≠‡∏á‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏ä‡∏µ‡∏û */}
                <div className="space-y-2">
                  <label className="flex items-center gap-2 cursor-pointer">
                    <input
                      type="checkbox"
                      checked={formData.hasProvidentFund}
                      onChange={(e) => setFormData({...formData, hasProvidentFund: e.target.checked})}
                      className="w-5 h-5 text-purple-600 rounded"
                    />
                    <span className="text-sm font-medium text-gray-700">‡∏Å‡∏≠‡∏á‡∏ó‡∏∏‡∏ô‡∏™‡∏≥‡∏£‡∏≠‡∏á‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏ä‡∏µ‡∏û (PVD)</span>
                  </label>
                  {formData.hasProvidentFund && (
                    <div>
                      <input
                        type="number"
                        value={formData.providentFundAmount || ''}
                        onChange={(e) => setFormData({...formData, providentFundAmount: parseFloat(e.target.value) || 0})}
                        placeholder="‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡πÑ‡∏õ‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà‡∏ï‡πà‡∏≠‡∏õ‡∏µ"
                        className="w-full px-4 py-2 border border-gray-300 rounded-lg"
                      />
                      <p className="text-xs text-purple-600 mt-1">‡∏•‡∏î‡∏´‡∏¢‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 15% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ‡∏´‡∏£‡∏∑‡∏≠ 500,000 ‡∏ö‡∏≤‡∏ó</p>
                    </div>
                  )}
                </div>

                {/* RMF */}
                <div className="space-y-2">
                  <label className="flex items-center gap-2 cursor-pointer">
                    <input
                      type="checkbox"
                      checked={formData.hasRMF}
                      onChange={(e) => setFormData({...formData, hasRMF: e.target.checked})}
                      className="w-5 h-5 text-purple-600 rounded"
                    />
                    <span className="text-sm font-medium text-gray-700">‡∏Å‡∏≠‡∏á‡∏ó‡∏∏‡∏ô RMF</span>
                  </label>
                  {formData.hasRMF && (
                    <div>
                      <input
                        type="number"
                        value={formData.rmfAmount || ''}
                        onChange={(e) => setFormData({...formData, rmfAmount: parseFloat(e.target.value) || 0})}
                        placeholder="‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡πÑ‡∏õ‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà‡∏ï‡πà‡∏≠‡∏õ‡∏µ"
                        className="w-full px-4 py-2 border border-gray-300 rounded-lg"
                      />
                      <p className="text-xs text-purple-600 mt-1">‡∏•‡∏î‡∏´‡∏¢‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 30% ‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ ‡∏´‡∏£‡∏∑‡∏≠ 500,000 ‡∏ö‡∏≤‡∏ó</p>
                    </div>
                  )}
                </div>

                {/* SSF */}
                <div className="space-y-2">
                  <label className="flex items-center gap-2 cursor-pointer">
                    <input
                      type="checkbox"
                      checked={formData.hasSSF}
                      onChange={(e) => setFormData({...formData, hasSSF: e.target.checked})}
                      className="w-5 h-5 text-purple-600 rounded"
                    />
                    <span className="text-sm font-medium text-gray-700">‡∏Å‡∏≠‡∏á‡∏ó‡∏∏‡∏ô SSF</span>
                  </label>
                  {formData.hasSSF && (
                    <div>
                      <input
                        type="number"
                        value={formData.ssfAmount || ''}
                        onChange={(e) => setFormData({...formData, ssfAmount: parseFloat(e.target.value) || 0})}
                        placeholder="‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡πÑ‡∏õ‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà‡∏ï‡πà‡∏≠‡∏õ‡∏µ"
                        className="w-full px-4 py-2 border border-gray-300 rounded-lg"
                      />
                      <p className="text-xs text-purple-600 mt-1">‡∏•‡∏î‡∏´‡∏¢‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 30% ‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ ‡∏´‡∏£‡∏∑‡∏≠ 200,000 ‡∏ö‡∏≤‡∏ó</p>
                    </div>
                  )}
                </div>
              </div>

              {/* 5. ‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏ö‡∏£‡∏¥‡∏à‡∏≤‡∏Ñ */}
              <div className="space-y-4 p-4 bg-yellow-50 rounded-lg border-2 border-yellow-200">
                <h3 className="text-lg font-bold text-yellow-800 flex items-center gap-2">
                  <Gift className="w-5 h-5" />
                  ‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏ö‡∏£‡∏¥‡∏à‡∏≤‡∏Ñ
                </h3>

                <div className="space-y-2">
                  <label className="block text-sm font-medium text-gray-700">
                    ‡πÄ‡∏á‡∏¥‡∏ô‡∏ö‡∏£‡∏¥‡∏à‡∏≤‡∏Ñ (‡∏ö‡∏≤‡∏ó)
                  </label>
                  <input
                    type="number"
                    value={formData.donationAmount || ''}
                    onChange={(e) => setFormData({...formData, donationAmount: parseFloat(e.target.value) || 0})}
                    placeholder="‡∏ö‡∏£‡∏¥‡∏à‡∏≤‡∏Ñ‡πÑ‡∏õ‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà‡∏ï‡πà‡∏≠‡∏õ‡∏µ"
                    className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-yellow-500"
                  />
                  <p className="text-xs text-yellow-700">‡∏•‡∏î‡∏´‡∏¢‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 10% ‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢</p>
                </div>
              </div>

              {/* ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á */}
              <div className="space-y-2">
                <label className="block text-sm font-medium text-gray-700">
                  ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ
                </label>
                <select
                  key={`risk-${formData.risk_tolerance}`}
                  value={formData.risk_tolerance}
                  onChange={(e) => setFormData({...formData, risk_tolerance: e.target.value as 'low' | 'medium' | 'high'})}
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500"
                >
                  <option value="low">‡∏ï‡πà‡∏≥ - ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢</option>
                  <option value="medium">‡∏Å‡∏•‡∏≤‡∏á - ‡∏™‡∏°‡∏î‡∏∏‡∏•‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÅ‡∏•‡∏∞‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô</option>
                  <option value="high">‡∏™‡∏π‡∏á - ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô‡∏™‡∏π‡∏á</option>
                </select>
              </div>

              {/* Submit Button */}
              <button
                type="submit"
                disabled={loading}
                className="w-full bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700 text-white font-semibold py-4 px-6 rounded-lg transition-all disabled:bg-gray-400 disabled:cursor-not-allowed shadow-lg"
              >
                {loading ? 'üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì...' : 'üöÄ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏†‡∏≤‡∏©‡∏µ‡πÅ‡∏•‡∏∞‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥'}
              </button>
            </form>
          </div>

          {/* Results Section */}
          <div className="space-y-6">
            {error && (
              <div className="bg-red-50 border border-red-200 rounded-lg p-4">
                <p className="text-red-800">{error}</p>
              </div>
            )}
            
            {result && (
              <>
                {/* Tax Summary */}
                <div className="bg-white rounded-xl shadow-lg p-6">
                  <h2 className="text-2xl font-bold text-gray-900 mb-4">üí∞ ‡∏™‡∏£‡∏∏‡∏õ‡∏†‡∏≤‡∏©‡∏µ</h2>
                  
                  <div className="space-y-3">
                    <div className="flex justify-between items-center pb-2 border-b">
                      <span className="text-gray-600">‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏°</span>
                      <span className="font-semibold">{formatCurrency(result.current_tax.gross_income)}</span>
                    </div>
                    <div className="flex justify-between items-center pb-2 border-b">
                      <span className="text-gray-600">‡∏Ñ‡πà‡∏≤‡∏•‡∏î‡∏´‡∏¢‡πà‡∏≠‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</span>
                      <span className="font-semibold text-green-600">-{formatCurrency(result.current_tax.total_deductions)}</span>
                    </div>
                    <div className="flex justify-between items-center pb-2 border-b">
                      <span className="text-gray-600">‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ‡∏™‡∏∏‡∏ó‡∏ò‡∏¥</span>
                      <span className="font-semibold">{formatCurrency(result.current_tax.taxable_income)}</span>
                    </div>
                    <div className="flex justify-between items-center pb-2 border-b border-red-200 bg-red-50 p-3 rounded-lg">
                      <span className="text-red-600 font-semibold">‡∏†‡∏≤‡∏©‡∏µ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏à‡πà‡∏≤‡∏¢</span>
                      <span className="text-2xl font-bold text-red-600">{formatCurrency(result.current_tax.tax_amount)}</span>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-gray-600">‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏†‡∏≤‡∏©‡∏µ‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢</span>
                      <span className="font-semibold text-blue-600">{result.current_tax.effective_tax_rate}%</span>
                    </div>
                  </div>

                  {/* Pie Chart */}
                  {chartData.length > 0 && (
                    <div className="mt-6 h-64">
                      <ResponsiveContainer width="100%" height="100%">
                        <PieChart>
                          <Pie
                            data={chartData}
                            cx="50%"
                            cy="50%"
                            labelLine={false}
                            label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}
                            outerRadius={80}
                            fill="#8884d8"
                            dataKey="value"
                          >
                            {chartData.map((entry, index) => (
                              <Cell key={`cell-${index}`} fill={entry.color} />
                            ))}
                          </Pie>
                          <Tooltip formatter={(value: number) => formatCurrency(value)} />
                          <Legend />
                        </PieChart>
                      </ResponsiveContainer>
                    </div>
                  )}
                </div>

                {/* AI Recommendations */}
                {result.recommendations.length > 0 && (
                  <div className="bg-white rounded-xl shadow-lg p-6">
                    <h2 className="text-2xl font-bold text-gray-900 mb-4">üí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏à‡∏≤‡∏Å AI</h2>
                    
                    <div className="bg-blue-50 rounded-lg p-4 mb-6">
                      <p className="text-gray-700 whitespace-pre-line">{result.summary}</p>
                    </div>

                    {/* ‡∏Å‡∏£‡∏≤‡∏ü‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô */}
                    {returnChartData.length > 0 && (
                      <div className="mb-6">
                        <h3 className="text-lg font-semibold text-gray-900 mb-4">üìà ‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô‡∏Ñ‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡∏ì‡πå</h3>
                        <div className="h-80">
                          <ResponsiveContainer width="100%" height="100%">
                            <BarChart data={returnChartData}>
                              <CartesianGrid strokeDasharray="3 3" />
                              <XAxis 
                                dataKey="name" 
                                angle={-45}
                                textAnchor="end"
                                height={100}
                                fontSize={12}
                              />
                              <YAxis 
                                label={{ value: '‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô (%)', angle: -90, position: 'insideLeft' }}
                              />
                              <Tooltip />
                              <Legend />
                              <Bar dataKey="1 ‡∏õ‡∏µ" fill="#3b82f6" />
                              <Bar dataKey="3 ‡∏õ‡∏µ" fill="#10b981" />
                              <Bar dataKey="5 ‡∏õ‡∏µ" fill="#f59e0b" />
                            </BarChart>
                          </ResponsiveContainer>
                        </div>
                      </div>
                    )}

                    <div className="space-y-4">
                      {result.recommendations.map((rec, index) => (
                        <div key={index} className="border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow">
                          <div className="flex items-start justify-between mb-3">
                            <h3 className="text-lg font-semibold text-gray-900">{rec.strategy}</h3>
                            <span className={`px-3 py-1 rounded-full text-xs font-semibold ${
                              rec.risk_level === 'low' ? 'bg-green-100 text-green-800' :
                              rec.risk_level === 'high' ? 'bg-red-100 text-red-800' :
                              'bg-yellow-100 text-yellow-800'
                            }`}>
                              {rec.risk_level === 'low' ? '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ï‡πà‡∏≥' :
                               rec.risk_level === 'high' ? '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏π‡∏á' : '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏•‡∏≤‡∏á'}
                            </span>
                          </div>

                          <p className="text-gray-600 mb-4">{rec.description}</p>

                          <div className="grid grid-cols-2 gap-4 mb-4">
                            <div className="bg-green-50 rounded-lg p-3">
                              <p className="text-xs text-gray-600">‡∏•‡∏á‡∏ó‡∏∏‡∏ô</p>
                              <p className="text-lg font-bold text-green-600">{formatCurrency(rec.investment_amount)}</p>
                            </div>
                            <div className="bg-blue-50 rounded-lg p-3">
                              <p className="text-xs text-gray-600">‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡∏†‡∏≤‡∏©‡∏µ</p>
                              <p className="text-lg font-bold text-blue-600">{formatCurrency(rec.tax_saving)}</p>
                            </div>
                          </div>

                          {rec.expected_return_1y && (
                            <div className="mb-4">
                              <p className="text-sm font-medium text-gray-700 mb-2">‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô‡∏Ñ‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡∏ì‡πå:</p>
                              <div className="flex gap-2">
                                <span className="text-xs bg-gray-100 px-2 py-1 rounded">1‡∏õ‡∏µ: {rec.expected_return_1y}%</span>
                                {rec.expected_return_3y > 0 && <span className="text-xs bg-gray-100 px-2 py-1 rounded">3‡∏õ‡∏µ: {rec.expected_return_3y}%</span>}
                                {rec.expected_return_5y > 0 && <span className="text-xs bg-gray-100 px-2 py-1 rounded">5‡∏õ‡∏µ: {rec.expected_return_5y}%</span>}
                              </div>
                            </div>
                          )}

                          <div className="grid grid-cols-2 gap-4 text-sm">
                            <div>
                              <p className="font-medium text-green-600 mb-1">‚úì ‡∏Ç‡πâ‡∏≠‡∏î‡∏µ</p>
                              <ul className="list-disc list-inside space-y-1 text-gray-600">
                                {rec.pros.map((pro, i) => <li key={i}>{pro}</li>)}
                              </ul>
                            </div>
                            <div>
                              <p className="font-medium text-red-600 mb-1">‚úó ‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏µ‡∏¢</p>
                              <ul className="list-disc list-inside space-y-1 text-gray-600">
                                {rec.cons.map((con, i) => <li key={i}>{con}</li>)}
                              </ul>
                            </div>
                          </div>
                        </div>
                      ))}
                    </div>

                    <div className="mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
                      <p className="text-sm text-yellow-800">{result.disclaimer}</p>
                    </div>
                  </div>
                )}
              </>
            )}
          </div>
        </div>
      </main>
    </div>
  );
}