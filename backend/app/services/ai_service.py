from langchain_openai import ChatOpenAI
from langchain_core.prompts import ChatPromptTemplate
from langchain_core.output_parsers import StrOutputParser
from app.config import settings
from app.models import TaxCalculationRequest, TaxCalculationResult
import json

class AIService:
    """
    ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ OpenAI API
    ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á Prompt Engineering ‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏ï‡∏£‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏î‡πá‡∏ô‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô
    """
    
    def __init__(self):
        self.llm = ChatOpenAI(
            model=settings.openai_model,
            temperature=settings.openai_temperature,
            openai_api_key=settings.openai_api_key
        )
    
    def generate_tax_optimization_prompt(
        self, 
        request: TaxCalculationRequest,
        tax_result: TaxCalculationResult,
        retrieved_context: str
    ) -> str:
        """
        ‡∏™‡∏£‡πâ‡∏≤‡∏á Prompt ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö AI ‡πÉ‡∏´‡πâ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÅ‡∏•‡∏∞‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ (‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡∏°‡πà)
        
        ‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ Prompt Engineering ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ:
        1. ‡πÉ‡∏´‡πâ Context ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô (‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤)
        2. ‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏à‡∏≥‡∏Å‡∏±‡∏î (‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠, ‡∏Å‡∏é‡∏†‡∏≤‡∏©‡∏µ)
        3. ‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì
        4. ‡∏£‡∏∞‡∏ö‡∏∏‡∏´‡πâ‡∏≤‡∏°‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£
        5. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Output Format ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
        """
        # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á‡πÉ‡∏ô‡∏Ñ‡πà‡∏≤‡∏•‡∏î‡∏´‡∏¢‡πà‡∏≠‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà
        gross = tax_result.gross_income
        max_rmf = min(gross * 0.30, 500000)
        max_ssf = min(gross * 0.30, 200000)
        max_pension = min(gross * 0.15, 200000)
        max_life = 100000
        max_health = 25000
        
        remaining_rmf = max_rmf - request.rmf
        remaining_ssf = max_ssf - request.ssf
        remaining_pension = max_pension - request.pension_insurance
        remaining_life = max_life - request.life_insurance
        remaining_health = max_health - request.health_insurance
        
        # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏†‡∏≤‡∏©‡∏µ‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏° (Marginal Tax Rate) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏†‡∏≤‡∏©‡∏µ‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡πÑ‡∏î‡πâ
        taxable = tax_result.taxable_income
        if taxable <= 150000:
            marginal_rate = 0
        elif taxable <= 300000:
            marginal_rate = 5
        elif taxable <= 500000:
            marginal_rate = 10
        elif taxable <= 750000:
            marginal_rate = 15
        elif taxable <= 1000000:
            marginal_rate = 20
        elif taxable <= 2000000:
            marginal_rate = 25
        elif taxable <= 5000000:
            marginal_rate = 30
        else:
            marginal_rate = 35
        
        return f"""‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡∏†‡∏≤‡∏©‡∏µ‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢ ‡∏õ‡∏µ 2568 
‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏≤‡∏Å Knowledge Base ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô

===========================================
üìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
===========================================
‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏°: {tax_result.gross_income:,.0f} ‡∏ö‡∏≤‡∏ó
‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ‡∏™‡∏∏‡∏ó‡∏ò‡∏¥ (‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å‡∏Ñ‡πà‡∏≤‡∏•‡∏î‡∏´‡∏¢‡πà‡∏≠‡∏ô): {tax_result.taxable_income:,.0f} ‡∏ö‡∏≤‡∏ó
‡∏†‡∏≤‡∏©‡∏µ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏à‡πà‡∏≤‡∏¢: {tax_result.tax_amount:,.0f} ‡∏ö‡∏≤‡∏ó
‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏†‡∏≤‡∏©‡∏µ‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢: {tax_result.effective_tax_rate}%
‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏†‡∏≤‡∏©‡∏µ‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏° (Marginal): {marginal_rate}%
‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ó‡∏µ‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£: {request.risk_tolerance}

===========================================
üí∞ ‡∏Ñ‡πà‡∏≤‡∏•‡∏î‡∏´‡∏¢‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß (‡πÅ‡∏•‡∏∞‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á‡∏≠‡∏¢‡∏π‡πà)
===========================================
1. RMF: {request.rmf:,.0f} / {max_rmf:,.0f} ‡∏ö‡∏≤‡∏ó 
   ‚Üí ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á: {remaining_rmf:,.0f} ‡∏ö‡∏≤‡∏ó

2. SSF: {request.ssf:,.0f} / {max_ssf:,.0f} ‡∏ö‡∏≤‡∏ó
   ‚Üí ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á: {remaining_ssf:,.0f} ‡∏ö‡∏≤‡∏ó

3. ‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ö‡∏≥‡∏ô‡∏≤‡∏ç: {request.pension_insurance:,.0f} / {max_pension:,.0f} ‡∏ö‡∏≤‡∏ó
   ‚Üí ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á: {remaining_pension:,.0f} ‡∏ö‡∏≤‡∏ó

4. ‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï: {request.life_insurance:,.0f} / 100,000 ‡∏ö‡∏≤‡∏ó
   ‚Üí ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á: {remaining_life:,.0f} ‡∏ö‡∏≤‡∏ó

5. ‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û: {request.health_insurance:,.0f} / 25,000 ‡∏ö‡∏≤‡∏ó
   ‚Üí ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á: {remaining_health:,.0f} ‡∏ö‡∏≤‡∏ó

6. ‡∏Å‡∏≠‡∏á‡∏ó‡∏∏‡∏ô‡∏™‡∏≥‡∏£‡∏≠‡∏á‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏ä‡∏µ‡∏û: {request.provident_fund:,.0f} ‡∏ö‡∏≤‡∏ó
7. ‡πÄ‡∏á‡∏¥‡∏ô‡∏ö‡∏£‡∏¥‡∏à‡∏≤‡∏Ñ: {request.donation:,.0f} ‡∏ö‡∏≤‡∏ó

===========================================
üìö ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å Knowledge Base
===========================================
{retrieved_context}

===========================================
üéØ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö AI (‡∏≠‡πà‡∏≤‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ç‡πâ‡∏≠!)
===========================================

**‡∏ß‡∏¥‡∏ò‡∏µ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏†‡∏≤‡∏©‡∏µ‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á:**
‡πÉ‡∏ä‡πâ "‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏†‡∏≤‡∏©‡∏µ‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°" ({marginal_rate}%) ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì

‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:
- ‡∏•‡∏á‡∏ó‡∏∏‡∏ô RMF 100,000 ‡∏ö‡∏≤‡∏ó
- ‡∏†‡∏≤‡∏©‡∏µ‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡πÑ‡∏î‡πâ = 100,000 √ó {marginal_rate}% = {int(100000 * marginal_rate / 100):,} ‡∏ö‡∏≤‡∏ó

**‡∏Å‡∏é‡∏Å‡∏≤‡∏£‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ (‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏°‡∏≤‡∏Å!):**

1. ‚úÖ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡πà‡∏°‡∏µ "‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á" ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
   - ‡∏ñ‡πâ‡∏≤ RMF ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ 0 ‡∏ö‡∏≤‡∏ó ‚Üí ‡∏´‡πâ‡∏≤‡∏°‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ RMF
   - ‡∏ñ‡πâ‡∏≤ RMF ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ 150,000 ‚Üí ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 150,000

2. ‚úÖ ‡∏à‡∏±‡∏î‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ï‡∏≤‡∏°:
   ‡∏Å. ‡∏†‡∏≤‡∏©‡∏µ‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡πÑ‡∏î‡πâ (‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏Å‡πà‡∏≠‡∏ô)
   ‡∏Ç. ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
   ‡∏Ñ. ‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô

3. ‚úÖ ‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ó‡∏µ‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£:
   - "low" ‚Üí ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ö‡∏≥‡∏ô‡∏≤‡∏ç, ‡∏Å‡∏≠‡∏á‡∏ó‡∏∏‡∏ô‡∏ï‡∏£‡∏≤‡∏™‡∏≤‡∏£‡∏´‡∏ô‡∏µ‡πâ
   - "medium" ‚Üí ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ RMF ‡∏ú‡∏™‡∏°, ‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ö‡∏≥‡∏ô‡∏≤‡∏ç
   - "high" ‚Üí ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ RMF ‡∏´‡∏∏‡πâ‡∏ô, SSF

4. ‚úÖ ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Knowledge Base ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
   - ‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÉ‡∏ô Knowledge Base
   - ‡∏Ç‡πâ‡∏≠‡∏î‡∏µ/‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏µ‡∏¢‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á

5. ‚ùå ‡∏´‡πâ‡∏≤‡∏°‡∏ó‡∏≥:
   - ‡∏´‡πâ‡∏≤‡∏°‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏Å‡∏¥‡∏ô‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠
   - ‡∏´‡πâ‡∏≤‡∏°‡πÅ‡∏ï‡πà‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô
   - ‡∏´‡πâ‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏†‡∏≤‡∏©‡∏µ‡∏ú‡∏¥‡∏î
   - ‡∏´‡πâ‡∏≤‡∏°‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏≥‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß

**‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á:**

‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå: RMF ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ 200,000 ‡∏ö‡∏≤‡∏ó, ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏†‡∏≤‡∏©‡∏µ {marginal_rate}%
‚úÖ ‡∏ñ‡∏π‡∏Å:
{{
  "strategy": "‡∏•‡∏á‡∏ó‡∏∏‡∏ô RMF ‡πÄ‡∏û‡∏¥‡πà‡∏° 200,000 ‡∏ö‡∏≤‡∏ó",
  "investment_amount": 200000,
  "tax_saving": {int(200000 * marginal_rate / 100)},
  ...
}}

‚ùå ‡∏ú‡∏¥‡∏î: investment_amount: 300000 (‡πÄ‡∏Å‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠!)
‚ùå ‡∏ú‡∏¥‡∏î: tax_saving: 50000 (‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ú‡∏¥‡∏î!)

===========================================
üìù ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö (JSON Array ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
===========================================

‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ 3-5 ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏à‡∏≤‡∏Å‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î ‡∏ï‡∏≤‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ:

[
  {{
    "strategy": "‡∏•‡∏á‡∏ó‡∏∏‡∏ô RMF ‡πÄ‡∏û‡∏¥‡πà‡∏° 150,000 ‡∏ö‡∏≤‡∏ó (‡∏Å‡∏≠‡∏á‡∏ó‡∏∏‡∏ô‡∏ú‡∏™‡∏°)",
    "description": "‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡πÉ‡∏ô‡∏Å‡∏≠‡∏á‡∏ó‡∏∏‡∏ô RMF ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ú‡∏™‡∏°‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏∏‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏≤‡∏™‡∏≤‡∏£‡∏´‡∏ô‡∏µ‡πâ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏ï‡πá‡∏°‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÅ‡∏•‡∏∞‡∏•‡∏î‡∏†‡∏≤‡∏©‡∏µ‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î ‡∏ï‡πâ‡∏≠‡∏á‡∏ñ‡∏∑‡∏≠‡∏à‡∏ô‡∏≠‡∏≤‡∏¢‡∏∏ 55 ‡∏õ‡∏µ ‡∏´‡∏£‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡∏Ñ‡∏£‡∏ö 5 ‡∏õ‡∏µ‡∏†‡∏≤‡∏©‡∏µ ‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô‡∏Ñ‡∏≤‡∏î‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÑ‡∏î‡πâ 5-8% ‡∏ï‡πà‡∏≠‡∏õ‡∏µ",
    "investment_amount": 150000,
    "tax_saving": {int(150000 * marginal_rate / 100)},
    "risk_level": "medium",
    "expected_return_1y": 5.5,
    "expected_return_3y": 6.8,
    "expected_return_5y": 8.0,
    "pros": ["‡∏•‡∏î‡∏´‡∏¢‡πà‡∏≠‡∏ô‡∏†‡∏≤‡∏©‡∏µ‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 30% ‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ", "‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏á‡∏¥‡∏ô‡∏ù‡∏≤‡∏Å", "‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏≠‡∏≠‡∏°‡∏£‡∏∞‡∏¢‡∏∞‡∏¢‡∏≤‡∏ß", "‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏©‡∏µ‡∏¢‡∏ì"],
    "cons": ["‡∏ï‡πâ‡∏≠‡∏á‡∏ñ‡∏∑‡∏≠‡∏à‡∏ô‡∏≠‡∏≤‡∏¢‡∏∏ 55 ‡∏õ‡∏µ ‡∏´‡∏£‡∏∑‡∏≠ 5 ‡∏õ‡∏µ", "‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏ï‡∏•‡∏≤‡∏î", "‡∏ñ‡∏≠‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏°‡∏µ‡∏†‡∏≤‡∏©‡∏µ‡πÄ‡∏û‡∏¥‡πà‡∏°", "‡∏Ç‡∏≤‡∏î‡∏™‡∏†‡∏≤‡∏û‡∏Ñ‡∏•‡πà‡∏≠‡∏á"]
  }},
  {{
    "strategy": "‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ö‡∏≥‡∏ô‡∏≤‡∏ç 100,000 ‡∏ö‡∏≤‡∏ó",
    "description": "‡∏ã‡∏∑‡πâ‡∏≠‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ö‡∏≥‡∏ô‡∏≤‡∏ç‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏•‡∏î‡∏†‡∏≤‡∏©‡∏µ ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ä‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÅ‡∏•‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏Å‡∏©‡∏µ‡∏¢‡∏ì ‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 3-4% ‡∏ï‡πà‡∏≠‡∏õ‡∏µ",
    "investment_amount": 100000,
    "tax_saving": {int(100000 * marginal_rate / 100)},
    "risk_level": "low",
    "expected_return_1y": 3.0,
    "expected_return_3y": 3.5,
    "expected_return_5y": 4.0,
    "pros": ["‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô", "‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ï‡πà‡∏≥‡∏°‡∏≤‡∏Å", "‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏Å‡∏©‡∏µ‡∏¢‡∏ì", "‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ô‡∏≠‡∏≤‡∏¢‡∏∏ 40+"],
    "cons": ["‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤‡∏Å‡∏≠‡∏á‡∏ó‡∏∏‡∏ô", "‡∏ï‡πâ‡∏≠‡∏á‡∏ú‡∏π‡∏Å‡∏û‡∏±‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏¢‡∏≤‡∏ß", "‡∏Ç‡∏≤‡∏î‡∏™‡∏†‡∏≤‡∏û‡∏Ñ‡∏•‡πà‡∏≠‡∏á‡∏™‡∏π‡∏á", "‡∏Ñ‡πà‡∏≤‡∏ò‡∏£‡∏£‡∏°‡πÄ‡∏ô‡∏µ‡∏¢‡∏°‡∏≠‡∏≤‡∏à‡∏™‡∏π‡∏á"]
  }}
]

‚ö†Ô∏è **‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏°‡∏≤‡∏Å:**
- ‡∏ï‡∏≠‡∏ö‡πÄ‡∏õ‡πá‡∏ô JSON Array ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
- ‡∏´‡πâ‡∏≤‡∏°‡∏°‡∏µ ```json ‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏∑‡πà‡∏ô‡πÉ‡∏î‡πÜ
- ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡πâ‡∏ß‡∏¢ [ ‡πÅ‡∏•‡∏∞‡∏à‡∏ö‡∏î‡πâ‡∏ß‡∏¢ ]
- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤:
  * investment_amount ‚â§ ‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠
  * tax_saving = investment_amount √ó {marginal_rate}%
  * risk_level ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö risk_tolerance ‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
  * ‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á

‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡∏≠‡∏ö‡πÄ‡∏•‡∏¢:"""
    
    async def generate_recommendations(
        self,
        request: TaxCalculationRequest,
        tax_result: TaxCalculationResult,
        retrieved_context: str
    ) -> list[dict]:
        """
        ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å OpenAI ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
        
        Args:
            request: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
            tax_result: ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏†‡∏≤‡∏©‡∏µ
            retrieved_context: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Vector DB
            
        Returns:
            List ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
        """
        try:
            prompt = self.generate_tax_optimization_prompt(
                request, tax_result, retrieved_context
            )
            
            print("=" * 60)
            print("üì§ SENDING PROMPT TO AI:")
            print("=" * 60)
            print(prompt[:500] + "...[truncated]")
            print("=" * 60)
            
            # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å LLM
            response = await self.llm.ainvoke(prompt)
            
            print("=" * 60)
            print("üì• RAW AI RESPONSE:")
            print("=" * 60)
            print(response.content)
            print("=" * 60)
            
            # Parse JSON
            recommendations_text = response.content.strip()
            
            # ‡∏•‡∏ö markdown code blocks ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
            if recommendations_text.startswith("```json"):
                recommendations_text = recommendations_text[7:]
            if recommendations_text.startswith("```"):
                recommendations_text = recommendations_text[3:]
            if recommendations_text.endswith("```"):
                recommendations_text = recommendations_text[:-3]
            
            recommendations = json.loads(recommendations_text.strip())
            
            print("=" * 60)
            print(f"‚úÖ PARSED {len(recommendations)} RECOMMENDATIONS")
            print("=" * 60)
            
            return recommendations
            
        except json.JSONDecodeError as e:
            print(f"‚ùå JSON Parse Error: {e}")
            print(f"Response was: {response.content}")
            # Fallback: ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
            return self._get_fallback_recommendations(request, tax_result)
        except Exception as e:
            print(f"‚ùå AI Service Error: {e}")
            import traceback
            traceback.print_exc()
            return self._get_fallback_recommendations(request, tax_result)
    
    def _get_fallback_recommendations(
        self,
        request: TaxCalculationRequest,
        tax_result: TaxCalculationResult
    ) -> list[dict]:
        """
        ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Å‡∏£‡∏ì‡∏µ AI ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß
        """
        gross = tax_result.gross_income
        max_rmf = min(gross * 0.30, 500000)
        remaining_rmf = max_rmf - request.rmf
        
        marginal_rate = 20  # ‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì
        
        recommendations = []
        
        # ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ RMF ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á
        if remaining_rmf > 0:
            amount = min(remaining_rmf, 100000)
            recommendations.append({
                "strategy": f"‡∏•‡∏á‡∏ó‡∏∏‡∏ô RMF ‡πÄ‡∏û‡∏¥‡πà‡∏° {amount:,.0f} ‡∏ö‡∏≤‡∏ó",
                "description": "‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡πÉ‡∏ô‡∏Å‡∏≠‡∏á‡∏ó‡∏∏‡∏ô‡∏£‡∏ß‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏ä‡∏µ‡∏û (RMF) ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏î‡∏´‡∏¢‡πà‡∏≠‡∏ô‡∏†‡∏≤‡∏©‡∏µ‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 30% ‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ ‡∏ï‡πâ‡∏≠‡∏á‡∏ñ‡∏∑‡∏≠‡∏à‡∏ô‡∏≠‡∏≤‡∏¢‡∏∏ 55 ‡∏õ‡∏µ ‡∏´‡∏£‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡∏Ñ‡∏£‡∏ö 5 ‡∏õ‡∏µ‡∏†‡∏≤‡∏©‡∏µ",
                "investment_amount": amount,
                "tax_saving": int(amount * marginal_rate / 100),
                "risk_level": "medium",
                "expected_return_1y": 5.0,
                "expected_return_3y": 6.5,
                "expected_return_5y": 8.0,
                "pros": ["‡∏•‡∏î‡∏´‡∏¢‡πà‡∏≠‡∏ô‡∏†‡∏≤‡∏©‡∏µ‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á", "‡∏°‡∏µ‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô‡∏î‡∏µ", "‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏≠‡∏≠‡∏°"],
                "cons": ["‡∏ï‡πâ‡∏≠‡∏á‡∏ñ‡∏∑‡∏≠‡∏à‡∏ô‡∏≠‡∏≤‡∏¢‡∏∏ 55 ‡∏õ‡∏µ", "‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏ï‡∏•‡∏≤‡∏î"]
            })
        
        # ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ö‡∏≥‡∏ô‡∏≤‡∏ç
        max_pension = min(gross * 0.15, 200000)
        remaining_pension = max_pension - request.pension_insurance
        if remaining_pension > 0:
            amount = min(remaining_pension, 100000)
            recommendations.append({
                "strategy": f"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ö‡∏≥‡∏ô‡∏≤‡∏ç {amount:,.0f} ‡∏ö‡∏≤‡∏ó",
                "description": "‡∏ã‡∏∑‡πâ‡∏≠‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ö‡∏≥‡∏ô‡∏≤‡∏ç‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏î‡∏´‡∏¢‡πà‡∏≠‡∏ô‡∏†‡∏≤‡∏©‡∏µ ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 15% ‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 200,000 ‡∏ö‡∏≤‡∏ó",
                "investment_amount": amount,
                "tax_saving": int(amount * marginal_rate / 100),
                "risk_level": "low",
                "expected_return_1y": 3.0,
                "expected_return_3y": 3.5,
                "expected_return_5y": 4.0,
                "pros": ["‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ï‡πà‡∏≥", "‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô", "‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏Å‡∏©‡∏µ‡∏¢‡∏ì"],
                "cons": ["‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤‡∏Å‡∏≠‡∏á‡∏ó‡∏∏‡∏ô", "‡∏ú‡∏π‡∏Å‡∏û‡∏±‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏¢‡∏≤‡∏ß"]
            })
        
        return recommendations